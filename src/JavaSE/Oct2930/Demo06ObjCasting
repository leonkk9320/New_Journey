1. 对象的向上转型，就是多态：
Fu obj = new Zi();
含义：右侧创建子类对象，把它当作父类看待使用
注意：向上转型是安全的，从小范围转向大范围
【一旦向上转型为父类，那么就无法使用子类特有内容】
类似于： double num = 100; 100是int,当作double用没有问题




2. 对象的向下转型，其实是一个还原的动作
格式：子类名称 对象名 = （子类名称）父类对象；
含义：将父类对象，【还原】成为本来的子类对象
Animal animal = new Cat(); // 本来是猫，向上转型为动物
Cat cat = (Cat) animal; // 本来是猫，已经被当作是动物了，还原回来成为本来的猫
//Dog dog = (Dog) animal; 错误！
【如此一来，可以使用子类特有内容】
注意事项：
a. 必须保证对象本来创建的时候，就是猫，才能向下转型成功
b. 如果对象创建时本来不是猫，现在非要向下转型为猫，就会报错（编译通过，运行异常， ClassCastException）
c. 所以，向下转型一般需要instanceof 判断
类似于：
int num = (int) 10.0; //可以   int num = (int)10.5; //不可以，精度损失