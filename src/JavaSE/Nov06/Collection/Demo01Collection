Collection 集合： 长度可变，只能存储对象 重写toString方法，打印的是内容
    ArrayList <Integer><String> al = new ArrayList<>();

Array 数组：长度不可变，对象基本数据类型都能存储 打印的是地址值
    int[] String[] arr = new int[5] String[]{"asd", "ert"};


学习集合目标：
1. 会使用集合存储数据
2. 会遍历集合，把数据取出来
3. 掌握每种集合的特性


                                         Collection接口
                                      定义的是所有单列集合中的共性方法
                                      所有单列集合都可以使用的共性方法
                                      没有带索引的方法
                                        |                   |
                List接口               |                      |         Set接口
             1.有序集合（存储和取出元素顺序相同）                      1.不允许存储重复元素
             2.允许存储重复元素                                     2.没有索引（不能使用for循环遍历）
             3.有索引，可以使用普通for循环遍历                               |           |
              |      |           |                                    |             |
            |        |             |                                |               |
          |          |               |                            |                 |
        |            |                 |                        |                   |
      |              |                   |           |        |                     |
Vector集合      ArrayList集合        LinkedList集合    |    TreeSet集合           HashSet集合
                                                     |                              |
                                                                                    |
                                                                            LinkedHashSet集合

ArrayList: 底层数组实现，查询快，增删慢
【地址连续，靠索引查询，长度固定，增删要创建新数组】                      HashSet: 底层是哈希表+红黑树实现，无索引、不允许存储重复元素、存取无序
LinkedList：底层链表实现，查询慢，增删快                              LinkedHashSet: 底层是哈希表+链表实现 无索引、不允许存储重复元素，
【查询要从头查询，慢，增删不影响链表结构，快】                                          可以保证存储顺序
                                                             TreeSet: 底层二叉树实现。一般用于排序